generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model alquiler {
  id               Int        @id @default(autoincrement())
  cantidad         Int
  tipo_precio      Int        @default(0)
  monto            Decimal    @db.Decimal(10, 2)
  abono            Decimal    @db.Decimal(10, 2)
  fecha_prestamo   DateTime   @db.DateTime(0)
  fecha_devolucion DateTime   @db.DateTime(0)
  observacion      String?    @db.Text
  estado           Int        @default(1)
  id_cliente       Int
  id_vehiculo      Int
  id_doc           Int
  vehiculos        vehiculos  @relation(fields: [id_vehiculo], references: [id], onDelete: Cascade, map: "alquiler_ibfk_1")
  clientes         clientes   @relation(fields: [id_cliente], references: [id], onDelete: Cascade, map: "alquiler_ibfk_2")
  documentos       documentos @relation(fields: [id_doc], references: [id], onDelete: Cascade, map: "alquiler_ibfk_3")

  @@index([id_cliente], map: "id_cliente")
  @@index([id_doc], map: "id_doc")
  @@index([id_vehiculo], map: "id_vehiculo")
}

model clientes {
  id           Int           @id @default(autoincrement())
  cedula       String?       @db.VarChar(10)
  nombre       String        @db.VarChar(100)
  telefono     String        @db.VarChar(20)
  direccion    String        @db.Text
  fecha        DateTime      @default(now()) @db.Timestamp(0)
  estado       Int           @default(1)
  alquiler     alquiler[]
  credenciales credenciales?
  reservas     reservas[]
}

model configuracion {
  id        Int    @id @default(autoincrement())
  ruc       String @db.VarChar(20)
  nombre    String @db.VarChar(200)
  telefono  String @db.VarChar(15)
  correo    String @db.VarChar(100)
  direccion String @db.VarChar(200)
  mensaje   String @db.Text
  logo      String @db.VarChar(10)
}

enum Role {
  ADMIN
  CUSTOMER
}

model credenciales {
  id          Int       @id @default(autoincrement())
  correo      String    @unique(map: "User_email_key")
  usuario   String    @unique(map: "User_username_key")
  clave   String
  role    Role      @default(CUSTOMER)
  creado  DateTime  @default(now())
  actualizado  DateTime  @updatedAt
  id_cliente Int?      @unique(map: "id_cliente")
  clientes   clientes? @relation(fields: [id_cliente], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ClienteCredenciales")
}

model documentos {
  id        Int        @id @default(autoincrement())
  documento String     @db.VarChar(20)
  estado    Int        @default(1)
  fecha     DateTime   @default(now()) @db.Timestamp(0)
  alquiler  alquiler[]
}

model marcas {
  id        Int         @id @default(autoincrement())
  marca     String      @db.VarChar(50)
  estado    Int         @default(1)
  fecha     DateTime    @default(now()) @db.Timestamp(0)
  vehiculos vehiculos[]
}

model reservas {
  id             Int       @id @default(autoincrement())
  observacion    String?
  clienteId      Int
  pickupDate     DateTime
  pickupLocation String
  pickupTime     String
  returnDate     DateTime
  returnLocation String
  returnTime     String
  vehiculoId     Int
  clientes       clientes  @relation(fields: [clienteId], references: [id])
  vehiculos      vehiculos @relation(fields: [vehiculoId], references: [id])

  @@index([clienteId], map: "reservas_clienteId_fkey")
  @@index([vehiculoId], map: "reservas_vehiculoId_fkey")
}

model usuarios {
  id        Int      @id @default(autoincrement())
  usuario   String   @db.VarChar(20)
  nombre    String   @db.VarChar(100)
  apellido  String?  @db.VarChar(100)
  correo    String   @db.VarChar(80)
  telefono  String?  @db.VarChar(20)
  direccion String?  @db.VarChar(100)
  perfil    String   @default("avatar.svg") @db.VarChar(50)
  clave     String   @db.VarChar(150)
  fecha     DateTime @default(now()) @db.Timestamp(0)
  estado    Int      @default(1)
}

model vehiculos {
  id          Int        @id @default(autoincrement())
  placa       String     @db.VarChar(50)
  precio_hora Decimal    @default(0.00) @db.Decimal(10, 2)
  precio_dia  Decimal    @default(0.00) @db.Decimal(10, 2)
  precio_mes  Decimal    @default(0.00) @db.Decimal(10, 2)
  modelo      String     @db.VarChar(50)
  kilometraje String     @db.VarChar(50)
  transmision String     @db.VarChar(50)
  asientos    Int        @default(0)
  equipaje    String     @db.VarChar(50)
  combustible String     @db.VarChar(50)
  foto        String     @db.VarChar(50)
  estado      Int        @default(1)
  fecha       DateTime   @default(now()) @db.Timestamp(0)
  id_marca    Int
  tipo        String
  alquiler    alquiler[]
  reservas    reservas[]
  marcas      marcas     @relation(fields: [id_marca], references: [id], onDelete: Cascade, map: "vehiculos_ibfk_2")

  @@index([id_marca], map: "id_marca")
}
